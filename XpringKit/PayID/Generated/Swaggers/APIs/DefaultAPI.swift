//
// DefaultAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class DefaultAPI {
    /**
     Resolve a PayID

     - parameter payID: (path) PayID to resolve 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func resolvePayIDToXRP(payID: String, completion: @escaping ((_ data: Destination?,_ error: Error?) -> Void)) {
        resolvePayIDToXRPWithRequestBuilder(payID: payID).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Resolve a PayID
     - GET /{payID}

     - parameter payID: (path) PayID to resolve 

     - returns: RequestBuilder<Destination> 
     */
    open class func resolvePayIDToXRPWithRequestBuilder(payID: String) -> RequestBuilder<Destination> {
        var path = "/{payID}"
        let payIDPreEscape = "\(payID)"
        let payIDPostEscape = payIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{payID}", with: payIDPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Destination>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
